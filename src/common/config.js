let today = new Date();
let oldyear = today.getFullYear();
if (today.getMonth() == 0 && today.getDate() == 1) {
  oldyear -= 1; //Some tolerance, on 1st Jan display the previous year
};
let newyear = oldyear + 1;

let config = {
  fireworks: {
    enabled: true, //Fireworks enabled; note that the fireworks effect is CPU intensive!
    duration: 60 * 1000, //Fireworks stop after 1 minute
  },
  sound: {
    enabled: false, //Sound effect enabled
  },
  worldClock: {
    enabled: true //Footer with time zone clocks
  },

  //Interactive buttons on countdown screen
  isSettingsButtonVisible: true,

  //Country name changes every 5 seconds
  rotateTitleInterval: 5 * 1000,

  //For testing purposes
  testTimerInterval: 15 * 1000, //15 seconds countdown timer for test
  testNextInterval: 12 * 1000, //Wait 12 seconds then display next country

  //Higlight letters on new year, may have performance impact, turn off on slow CPU
  isHighlightTextEnabled: true,

  //Header text visibility
  isHeaderTitleVisible: true,

  //Text when the target moment is reached
  happyNewYearText: "Happy New Year!!!",

  //Is country flag visible (works on Firefox)
  isCountryFlagVisible: true,

  //Is program enabled
  isProgramMode: false,

  //Scheduled program for time zones and countries
  program: [
    {
      name: "Sydney ğŸ‡¦ğŸ‡º",
      start: new Date("December 31 " + oldyear + " 19:30:00"),
      midnight: new Date("December 31 " + oldyear + " 20:00:00")
    },
    {
      name: "Brisbane ğŸ‡¦ğŸ‡º",
      start: new Date("December 31 " + oldyear + " 20:30:00"),
      midnight: new Date("December 31 " + oldyear + " 21:00:00")
    },
    {
      name: "Japan ğŸ‡¯ğŸ‡µ",
      start: new Date("December 31 " + oldyear + " 21:30:00"),
      midnight: new Date("December 31 " + oldyear + " 22:00:00")
    },
    {
      name: "China ğŸ‡¨ğŸ‡³",
      start: new Date("December 31 " + oldyear + " 22:30:00"),
      midnight: new Date("December 31 " + oldyear + " 23:00:00")
    },
    {
      name: "Thailand ğŸ‡¹ğŸ‡­",
      start: new Date("December 31 " + oldyear + " 23:30:00"),
      midnight: new Date("January 1 " + newyear + " 00:00:00")
    },
    {
      name: "Bhutan ğŸ‡§ğŸ‡¹",
      start: new Date("January 1 " + newyear + " 00:45:00"),
      midnight: new Date("January 1 " + newyear + " 01:00:00")
    },
    {
      name: "Nepal ğŸ‡³ğŸ‡µ",
      start: new Date("January 1 " + newyear + " 01:05:00"),
      midnight: new Date("January 1 " + newyear + " 01:15:00")
    },
    {
      name: "India ğŸ‡®ğŸ‡³",
      start: new Date("January 1 " + newyear + " 01:20:00"),
      midnight: new Date("January 1 " + newyear + " 01:30:00")
    },
    {
      name: "Pakistan ğŸ‡µğŸ‡°",
      start: new Date("January 1 " + newyear + " 01:50:00"),
      midnight: new Date("January 1 " + newyear + " 02:00:00")
    },
    {
      name: "Afghanistan ğŸ‡¦ğŸ‡«",
      start: new Date("January 1 " + newyear + " 02:20:00"),
      midnight: new Date("January 1 " + newyear + " 02:30:00")
    },
    {
      name: "Azerbaijan ğŸ‡¦ğŸ‡¿",
      start: new Date("January 1 " + newyear + " 02:50:00"),
      midnight: new Date("January 1 " + newyear + " 03:00:00")
    },
    {
      name: "Moscow ğŸ‡·ğŸ‡º",
      //names: [ "Moscow ğŸ‡·ğŸ‡º", "Yemen ğŸ‡¾ğŸ‡ª" ],
      start: new Date("January 1 " + newyear + " 03:30:00"),
      midnight: new Date("January 1 " + newyear + " 04:00:00")
    },
    {
      name: "Romania ğŸ‡·ğŸ‡´",
      names: [
        "Israel ğŸ‡®ğŸ‡±",
        "Bulgaria ğŸ‡§ğŸ‡¬",
        "Greece ğŸ‡¬ğŸ‡·",
        "Estonia ğŸ‡ªğŸ‡ª",
        "South Africa ğŸ‡¿ğŸ‡¦",
        "Romania ğŸ‡·ğŸ‡´"
      ],
      start: new Date("January 1 " + newyear + " 04:30:00"),
      midnight: new Date("January 1 " + newyear + " 05:00:00")
    },
    {
      name: "Europe ğŸ‡ªğŸ‡º",
      names: [
        "Austria ğŸ‡¦ğŸ‡¹",
        "Belgium ğŸ‡§ğŸ‡ª",
        "Bosnia & Herzegovina ğŸ‡§ğŸ‡¦",
        "Croatia ğŸ‡­ğŸ‡·",
        "Czechia ğŸ‡¨ğŸ‡¿",
        "Denmark ğŸ‡©ğŸ‡°",
        "France ğŸ‡«ğŸ‡·",
        "Germany ğŸ‡©ğŸ‡ª",
        "Hungary ğŸ‡­ğŸ‡º",
        "Italy ğŸ‡®ğŸ‡¹",
        "Netherlands ğŸ‡³ğŸ‡±",
        "Norway ğŸ‡³ğŸ‡´",
        "Poland ğŸ‡µğŸ‡±",
        "Serbia ğŸ‡·ğŸ‡¸",
        "Slovakia ğŸ‡¸ğŸ‡°",
        "Slovenia ğŸ‡¸ğŸ‡®",
        "Spain ğŸ‡ªğŸ‡¸",
        "Sweden ğŸ‡¸ğŸ‡ª",
        "Switzerland ğŸ‡¨ğŸ‡­",
        "Europe ğŸ‡ªğŸ‡º",
      ],
      start: new Date("January 1 " + newyear + " 05:30:00"),
      midnight: new Date("January 1 " + newyear + " 06:00:00")
    },
    {
      name: "London ğŸ‡¬ğŸ‡§",
      names: [ "London ğŸ‡¬ğŸ‡§", "Lisbon ğŸ‡µğŸ‡¹", "Dublin ğŸ‡®ğŸ‡ª" ],
      start: new Date("January 1 " + newyear + " 06:30:00"),
      midnight: new Date("January 1 " + newyear + " 07:00:00")
    },
    {
      name: "Cabo Verde ğŸ‡¨ğŸ‡»", //Cape Verde
      start: new Date("January 1 " + newyear + " 07:30:00"),
      midnight: new Date("January 1 " + newyear + " 08:00:00")
    },
    {
      name: "Brasilia ğŸ‡§ğŸ‡·",
      start: new Date("January 1 " + newyear + " 08:30:00"),
      midnight: new Date("January 1 " + newyear + " 10:00:00")
    },
    {
      name: "New York ğŸ‡ºğŸ‡¸",
      start: new Date("January 1 " + newyear + " 11:30:00"),
      midnight: new Date("January 1 " + newyear + " 12:00:00")
    },
    {
      name: "Mexico City ğŸ‡²ğŸ‡½",
      start: new Date("January 1 " + newyear + " 12:30:00"),
      midnight: new Date("January 1 " + newyear + " 13:00:00")
    },
    {
      name: "Calgary ğŸ‡¨ğŸ‡¦",
      start: new Date("January 1 " + newyear + " 13:30:00"),
      midnight: new Date("January 1 " + newyear + " 14:00:00")
    },
    {
      name: "Los Angeles ğŸ‡ºğŸ‡¸",
      start: new Date("January 1 " + newyear + " 14:30:00"),
      midnight: new Date("January 1 " + newyear + " 15:00:00")
    },
    {
      name: "Honolulu ğŸ‡ºğŸ‡¸",
      start: new Date("January 1 " + newyear + " 16:30:00"),
      midnight: new Date("January 1 " + newyear + " 17:00:00")
    },
  ],

  //World clocks - must be exactly 6 of them to fit the HTML elements
  clocks: [
    { name: "Honolulu", timezone: "Pacific/Honolulu" },
    { name: "Brasilia", timezone: "America/Sao_Paulo" },
    { name: "London", timezone: "Europe/London" },
    { name: "Koh Phangan", timezone: "Asia/Bangkok", highlight: true },
    { name: "Tokyo", timezone: "Asia/Tokyo" },
    { name: "Kiribati", timezone: "Pacific/Kiritimati" }, //Kiribati has 3 time zones, one symbolic is picked
  ]
};

export const $config = config;
